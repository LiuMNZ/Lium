 形如a3= b3 + c3 + d3的等式被称为完美立方等式。例如 123= 63 + 83 + 103 。编写一个程序，对任给的正整数N (N≤100)，寻找所有的四元组(a, b, c, d)，使得a3 = b3 + c3 + d3，其中a,b,c,d 大于 1, 小于等于N，且b<=c<=d。
 输入
一个正整数N (N≤100)。
 输出
每行输出一个完美立方。输出格式为:
Cube = a, Triple = (b,c,d) 其中a,b,c,d所在位置分别用实际求出四元组值代入。

#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
int main(){
    int n,a,b,c,d;
    scanf("%d",&n);
    for(a=2;a<=n;a++)
        for(d=1;d<a;d++)
            for(c=1;c<=d;c++)
                for(b=1;b<=c;b++)
                    if(pow(a, 3)==pow(b, 3)+pow(c,3)+pow(d,3))
                        printf("Cube = %d, Triple = (%d,%d,%d)\n",a,b,c,d);
    return 0;
}
/*输入样例：
24
输出样例：
Cube = 6, Triple = (3,4,5)
Cube = 12, Triple = (6,8,10) 
Cube = 18, Triple = (2,12,16) 
Cube = 18, Triple = (9,12,15) 
Cube = 19, Triple = (3,10,18)
Cube = 20, Triple = (7,14,17) 
Cube = 24, Triple = (12,16,20)*/

/* 解题思路
四重循环枚举a,b,c,d ，a在最外层，d在最里层，每一层
都是从小到大枚举， a枚举范围[2,N]
b范围 [2,a-1]
c范围 [b,a-1]
d范围 [c,a-1]
*/
