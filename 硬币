有12枚硬币。其中有11枚真币和1枚假币。假币和真 币重量不同，但不知道假币比真币轻还是重。现在， 用一架天平称了这些币三次，告诉你称的结果，请你 找出假币并且确定假币是轻是重(数据保证一定能找 出来)。
输入
第一行是测试数据组数。
每组数据有三行，每行表示一次称量的结果。银币标号为 A-L。每次称量的结果用三个以空格隔开的字符串表示: 天平左边放置的硬币 天平右边放置的硬币 平衡状态。其 中平衡状态用``up'', ``down'', 或 ``even''表示, 分别为右 端高、右端低和平衡。天平左右的硬币数总是相等的。
输出 输出哪一个标号的银币是假币，并说明它比真币轻还是重。
#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
bool IsFake(char ch,bool light);
char result[3][5];
char Left[3][7];
char Right[3][7];
int main(){
    char ch;
    int i,t;
    scanf("%d",&t);
    while(t--){
        for(i=0;i<3;++i)
            cin>>Left[i]>>Right[i]>>result[i];
        for(ch='A';ch<='L';ch++){
            if(IsFake(ch,true)){
                cout<<ch<<" is the counterfeit coin and it is light.\n";
                break;
            }
            else if(IsFake(ch,false)){
                cout<<ch<<" is the counterfeit coin and it is heavy.\n";
                break;
            }
        }
    }
    return 0;
}
bool IsFake(char ch,bool light){
    int i;
    for(i=0;i<3;i++){
        char *pleft,*pright;
        if(light){//假币更轻，则要么相平，要么有假币的那边轻
            pleft=Left[i];
            pright=Right[i];
        }
        else{
        //假币更沉，则要么相平，要么有假币的那边沉；此时把称量结果左右对换（是为了让后面switch语句里的话不管假币轻还是假币重都仍然正确，不用把switch再写一遍了）
            pleft=Right[i];
            pright=Left[i];
        }
        switch (result[i][0]) {//假设假币轻
            case 'u'://右边高，即左边沉，右边轻;假币应该在右边
                if(strchr(pright, ch)==NULL)
                    return false;
                break;
            case 'e'://平
                if(strchr(pleft,ch)||strchr(pright,ch))
                    return false;
                break;
            case 'd'://右边低，即左边轻，右边沉；假币应该在左边
                if(strchr(pleft,ch)==NULL)
                    return false;
                break;
        }
    }
    return true;
}

/*输入样例
1
ABCD EFGH even 
ABCI EFJK up 
ABIJ EFGH even 
输出样例
K is the counterfeit coin and it is light.*/

/*思路：
试每一枚硬币，假设它是轻的或者重的。
*/
